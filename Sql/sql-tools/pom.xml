<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns="http://maven.apache.org/POM/4.0.0">
    <parent>
        <artifactId>sql-parent</artifactId>
        <groupId>com.joe</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.joe.sql</groupId>
    <artifactId>sql-tools</artifactId>
    <name>sql-tools</name>
    <version>1.0-SNAPSHOT</version>
    
    <dependencies>
        
        <dependency>
            <groupId>com.joe.sql</groupId>
            <artifactId>jdbc-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.schemacrawler</groupId>
            <artifactId>schemacrawler</artifactId>
            <version>8.4</version>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.1.2</version>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0-oracle-thin-extras</artifactId>
            <version>0.9.0.2</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
                
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.5</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <!-- Default property values.  These properties can be overwritten in a profile.\ -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- this identifies where the sql-maven-plugin component directory is located -->
        <sql.component.directory>${basedir}/..</sql.component.directory>
        
        <!-- these identifies where the grab-sql output files should be located -->
        <sql.directory>${basedir}/src/main/sql</sql.directory>
        
        <!-- this determines whether unit tests generate debug output -->
        <debug>false</debug>
        
        <!-- this determines whether unit tests print Cache triggers output -->
        <printTriggers>false</printTriggers>
        
        <!-- this determines whether unit tests analyze Cache metadata's oracle compatibility output -->
        <checkSchemas>false</checkSchemas>
        
        <!--  test SqlToolsProperties property file location -->
        <com.med.sql-tools.test.properties>${basedir}/src/test/resources/sql-tools.properties</com.med.sql-tools.test.properties>
    </properties>
    
    <build>
        <testResources>
            <testResource>
                <!-- This will inject "real" properties values from default properties in profiles section below and 
             from maven settings.xml into the test/resources properties files that will exist on 
             the test class path -->
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <!-- This is necessary to enable JDK 1.6 for sub modules -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
			<!-- generate sources jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.0.4</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>debug</name>
                            <value>${debug}</value>
                        </property>
                        <property>
                            <name>printTriggers</name>
                            <value>${printTriggers}</value>
                        </property>
                        <property>
                            <name>checkSchemas</name>
                            <value>${checkSchemas}</value>
                        </property>
                        <property>
                            <name>dbms</name>
                            <value>${dbms}</value>
                        </property>
                        <property>
                            <name>com.med.config.dataSource.alineoDataSource.jdbc.driver</name>
                            <value>${com.med.config.dataSource.alineoDataSource.jdbc.driver}</value>
                        </property>
                        <property>
                            <name>com.med.config.dataSource.alineoDataSource.jdbc.url</name>
                            <value>${com.med.config.dataSource.alineoDataSource.jdbc.url}</value>
                        </property>
                        <property>
                            <name>com.med.config.dataSource.alineoDataSource.jdbc.user</name>
                            <value>${com.med.config.dataSource.alineoDataSource.jdbc.user}</value>
                        </property>
                        <property>
                            <name>com.med.config.dataSource.alineoDataSource.jdbc.password</name>
                            <value>${com.med.config.dataSource.alineoDataSource.jdbc.password}</value>
                        </property>
                        <!--  test SqlToolsProperties property file location -->
                        <property>
                            <name>com.med.sql-tools.test.properties</name>
                            <value>${com.med.sql-tools.test.properties}</value>
                        </property>
                        <property>
                            <name>com.med.sql-tools.properties</name>
                            <value>${com.med.sql-tools.test.properties}</value>
                        </property>
                        <property>
                            <name>targetSchemas</name>
                            <value>REMOTE</value>
                        </property>
                        <property>
                            <name>excludeTargetSchemas</name>
                            <value>false</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
            <!-- clean all generated files -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${sql.directory}</directory>
                            <includes>
                                <include>**/*.sql</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <!-- This profile will automate sql-tools.zip file generation -->
    <profiles>
        <profile>
            <id>create-zip</id>
            <activation>
                <property>
                    <name>create-zip</name>
                </property>
            </activation>
            <properties>
                <!-- jar-with-dependencies file -->
                <src.jar>${basedir}/target/sql-tools-${version}-jar-with-dependencies.jar</src.jar>
                <!-- bin file directory -->
                <bin.directory>${basedir}/src/main/bin</bin.directory>
                <!-- resources file directory -->
                <resources.directory>${basedir}/src/main/resources</resources.directory>
                <!-- zip file directory -->
                <zip.directory>${basedir}/target/sql-tools</zip.directory>
                <!-- zip file -->
                <zip.file>${basedir}/target/sql-tools.zip</zip.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                </manifest>
                            </archive>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.3</version>
                        <executions>
                            <!-- copy jar-with-dependencies file -->
                            <execution>
                                <id>copy_configs_xml</id>
                                <phase>package</phase>
                                <configuration>
                                    <tasks>
                                        <echo>whoo hoo! </echo>
                                        
                                        <!-- create zip directory -->
                                        <delete dir="${zip.directory}"/>
                                        <mkdir dir="${zip.directory}"/>
                                        
                                        <!-- copy jar-with-dependencies file into zip directory -->
                                        <copy tofile="${zip.directory}/sql-tools.jar" file="${src.jar}"/>
                                        
                                        <!-- copy contents of resources directory zip directory -->
                                        <copy todir="${zip.directory}">
                                            <fileset dir="${resources.directory}" includes="**/*.*"/>
                                        </copy>
                                        
                                        <!-- copy contents of bin directory into zip directory -->                                     
                                        <copy todir="${zip.directory}">
                                            <fileset dir="${bin.directory}" includes="**/*.*"/>
                                        </copy>
                                        
                                        <!-- zip contents of zip directory -->                                       
                                        <zip destfile="${zip.file}">
                                            <fileset dir="${zip.directory}" includes="**/*.*"/>
                                        </zip>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
