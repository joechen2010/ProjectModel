<cruisecontrol>

	<!-- Load environment variables -->
	<property environment="env" toupper="true"/>

	<!-- Commonly used directories -->
	<property name="ccase.viewdir" value="C:/ccviews/Alineo_Model_int"/>
	<property name="ccase.branch" value="Alineo_Model_PM"/>

	<property name="jaguar.dir" value="${ccase.viewdir}/Jaguar"/>

	<property name="log.parent.dir" value="C:/CruiseControl/logs"/>
	<property name="log.dir" value="${log.parent.dir}/${project.name}"/>

	<property name="alineo.log.dir" value="C:/CruiseControl/logs/Alineo"/>

	<!-- Configure database  properties -->
	<property name="oracleDatabaseRefreshTime" value="2200"/>
	<property name="cacheDatabaseRefreshTime" value="2215"/>
	
	<!-- Configure installer/updater test properties -->
	<property name="oracleCompareDBUpdateInstallTestTime" value="2320"/>
	<property name="cacheCompareDBUpdateInstallTestTime" value="2350"/>
	<property name="oracle.testsql.database" value="CWVDV-JUNIT:DEVCCINSTLR-SYSTEM"/>
	<property name="cache.testsql.database" value="LOCAL:DEVCCINSTLR"/>
	<property name="anthome.location" value="C:\Apps\apache-ant-1.7.0" />
	<property name="antworkingdir.location" value="C:\testsql" />
	
	<property name="pcs.viewdir" value="C:/ccviews/PCS_Model_int"/>
	<!-- cruise control branch is the name of the stream -->
	<property name="pcs.branch" value="PCS_Model_PM"/>
	
    <property name="css.location" value="webapps/cruisecontrol/css/cruisecontrol.css"/>
    <property name="xsl.location" value="webapps/cruisecontrol/htmlemail-xsl"/>


    <property name="pcs.dir" value="${pcs.viewdir}/Jaguar/PCSCommon"/>

    <!-- Preconfigure plugins -->
    <plugin name="currentbuildstatuslistener" file="${log.dir}/status.txt"/>
    <plugin name="currentbuildstatuspublisher" file="${log.dir}/status.txt"/>

    <!-- Defaults for email -->
	<property name="buildmaster.email" value="steve.morse@MEDecision.com"/>
	<property name="buildmaster.name" value="Steve Morse"/>
	<property name="buildadmin.email" value="Steve.Morse@MEDecision.com"/>
	<property name="buildadmin.name" value="Steve Morse"/>
	<property name="installerbuildadmin.email" value="Steve.Morse@MEDecision.com"/>
	<property name="installerbuildadmin.name" value="Steve Morse"/>

	<!-- CruiseControl settings: build every 20 minutes -->
	<property name="interval" value="1200"/>
	<property name="build.server" value="CWPDV-DEVBOX-2:8880"/>

	<!-- Preconfigure plugins -->
	<plugin name="currentbuildstatuslistener" file="${log.dir}/status.txt"/>
	<plugin name="currentbuildstatuspublisher" file="${log.dir}/status.txt"/>

	<!-- Reusable plugin for typical published emails -->
	<plugin 	name="htmlemail-typical" 
			classname="net.sourceforge.cruisecontrol.publishers.HTMLEmailPublisher" 
			buildresultsurl="http://${build.server}/cruisecontrol/buildresults/${project.name}" 
			subjectprefix="[CruiseControl] " 
			css="${css.location}" 
			xsldir="${xsl.location}" 
			logdir="${log.dir}" 
			mailhost="MEDHQ-EXCHANGE" 
			defaultsuffix="@medecision.com" 
			reportsuccess="fixes" 
			returnaddress="${buildmaster.email}" 
			returnname="${buildmaster.name}">
		<always address="buildmasters"/>
		<map alias="buildmasters" address="Jaguar, Corin.Lucey, Paul.Guerin, Chris.Markiewicz, Chris.Sharp" />
		<map alias="jjones" address="John.Jones" />
		<map alias="sbeebe" address="Scott.Beebe" />
		<map alias="dcromwell" address="Darryn.Cromwell" />
		<map alias="pdarrell" address="Purnell.Darrell" />
		<map alias="amilgram" address="Arlene.Milgram" />
		<map alias="mwilliam" address="Marcia.Williams" />
		<map alias="asims" address="Andy.Sims" />
		<map alias="pguerin" address="Paul.Guerin" />
		<map alias="scmuser" address="Corin.Lucey" />
		<map alias="cc-Alineo" address="Corin.Lucey" />

	</plugin>

	<!-- Emails going to build administrator.  The "cc-"* addresses are generated by CruiseControl and are not valid email addresses so they are mapped to the admin. -->
	<plugin name="htmlemail-buildadmin" classname="net.sourceforge.cruisecontrol.publishers.HTMLEmailPublisher" buildresultsurl="http://${build.server}/cruisecontrol/buildresults/${project.name}" subjectprefix="[CruiseControl] " css="webapps/cruisecontrol/css/cruisecontrol.css" xsldir="webapps/cruisecontrol/htmlemail-xsl" logdir="${log.dir}" mailhost="MEDHQ-EXCHANGE" defaultsuffix="@medecision.com" reportsuccess="fixes" returnaddress="${buildadmin.email}" returnname="${buildadmin.name}">
		<always address="buildmasters"/>
		<map alias="buildmasters" address="David.Ousey" />
		<map alias="cc-Alineo" address="David.Ousey" />
	</plugin>

	<!-- Emails going to build administrator.  The "cc-"* addresses are generated by CruiseControl and are not valid email addresses so they are mapped to the admin. -->
	<plugin 	name="htmlemail-installerbuildadmin" 
			classname="net.sourceforge.cruisecontrol.publishers.HTMLEmailPublisher" 
			buildresultsurl="http://${build.server}/cruisecontrol/buildresults/${project.name}" 
			subjectprefix="[CruiseControl] " 
			css="${css.location}" 
			xsldir="${xsl.location}" 
			logdir="${log.dir}" 
			mailhost="MEDHQ-EXCHANGE" 
			defaultsuffix="@medecision.com" 
			reportsuccess="fixes" 
			returnaddress="${installerbuildadmin.email}" 
			returnname="${installerbuildadmin.name}">
		<always address="buildmasters"/>
		<map alias="buildmasters" address="Jaguar, Corin.Lucey, Paul.Guerin, Chris.Markiewicz" />
	</plugin>

	<!-- Reusable plugin for CruiseControl emails -->
	<plugin 
			name="iexchange-cc-email" 
			classname="net.sourceforge.cruisecontrol.publishers.HTMLEmailPublisher" 
			buildresultsurl="http://${build.server}/cruisecontrol/buildresults/${project.name}" 
			subjectprefix="[CruiseControl]" 
			css="${css.location}" 
			xsldir="${xsl.location}" 
			logdir="${log.dir}" 
			mailhost="MEDHQ-EXCHANGE" 
			defaultsuffix="@medecision.com" 
			reportsuccess="fixes" 
			returnaddress="${iex.buildmaster.email}" 
			returnname="${iex.buildmaster.name}"
			spamwhilebroken="false">	
		<failure address="iEXCHANGEScrumteams@medecision.com" reportWhenFixed="true"/>
	</plugin>


	<!-- Main compilation build -->
	<project name="Alineo" buildafterfailed="false">

		<!-- Identifies location of build status/console output -->
		<listeners><currentbuildstatuslistener/></listeners>

		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Bootstrappers are run every time the build runs,  *before* the modification checks -->
		<bootstrappers>
			<clearcasebootstrapper file="pom.xml" viewPath="${jaguar.dir}/Alineo" />
		</bootstrappers>

		<!-- Defines where cruise looks for changes, to decide whether to run the build.  Note: Must include name of VOB (i.e. "Jaguar"), not just view directory -->
		<modificationset quietperiod="180">
			<clearcase branch="${ccase.branch}" viewpath="${jaguar.dir}" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which build file/target -->
		<schedule interval="${interval}">
			<composite>

				<!-- ClearCase update -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml"
					goal="com.med:clearcase-update-plugin:update" flags="-N" />			

				<!-- Commented out..Compile, test, install and deploy (to JBoss) mock-remote-server web app. We need to test and deploy this so that CP Web client-side tests can run
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Integrate/mock-remote-server/pom.xml" 
					goal="clean install cargo:deploy" >
					<property name="database" value="LOCAL:GNL700DVD"/>
				</maven2>
				-->

				<!-- Compile and install -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml" 
					goal="clean install">
					<property name="maven.test.skip" value="true"/>
				</maven2>

				<!-- Compile, test, install and deploy (to JBoss) Autocoder interface server web app. We need to test and deploy this so that CP Web client-side tests can run, 
				     but this component also depends on utilities-core pieces so this must happen after Alineo install above. -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Integrate/McKessonAutocoder/autocoder-interface-server/pom.xml" 
					goal="clean install cargo:deploy ">
					 <property name="database" value="LOCAL:GNL700DVD"/>
				</maven2>

				<!-- Test against Cache -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml" goal="test" >
					<property name="database" value="LOCAL:GNL700DVD"/>
				</maven2>

				<!-- Test against Oracle -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml" goal="test" >
					<property name="database" value="CWVDV-JUNIT:DEVCCALINEO"/>
				</maven2>

			</composite>
		</schedule>

		<!-- Copy JUnit results to CruiseControl log file. This will make them available to test results tab in CruiseControl. -->
		<log logdir="${log.dir}">
			<merge dir="${jaguar.dir}/Utilities/utilities-test/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Utilities/utilities-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Alineo/alineo-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Security_Core/security-admin/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Security_Core/security-admin-client/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Security_Core/security-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Security_Core/security-default/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/McKessonAutocoder/autocoder-interface/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/McKessonAutocoder/autocoder-interface-server/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/RemoteEligibility/remote-elig-batch/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/RemoteEligibility/remote-elig-client/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/RemoteEligibility/remote-elig-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Commons/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/DataMigration/migration/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Questionnaires/questionnaire-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/Solucient/solucient/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/AutoApproval/auto-approval/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/AutoWorkflow/auto-workflow/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/RequestAndProgramImport/request-and-program-import-batch/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/RequestAndProgramImport/request-and-program-import-client/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Integrate/RequestAndProgramImport/request-and-program-import-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/ClientLetter/client-letter/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/OCC/occ-admin/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/OCC/occ-core/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/PCS-RAV/PCS-RAV/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/PCS-RAV/PCS-RAV-client/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/ClientLetter/client-letter-scheduler/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/EventNotification/treatment-update/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/AlineoWebServices/impl/target/surefire-reports"/>
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<!--currentbuildstatuspublisher/-->
			<htmlemail-typical />
		</publishers>

	</project>

	<!-- Hot-deployment of CP Web to JBoss instance on this server (port 8080) -->
	<project name="Alineo-JBoss-HotDeploy">

		<!-- Identifies location of build status/console output -->
		<listeners><currentbuildstatuslistener/></listeners>

		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Will only run if there is ClearCase activity since last regularly scheduled build. -->
		<modificationset>
			<buildstatus logdir="C:/CruiseControl/logs/Alineo" />
		</modificationset>

		<schedule>
			<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/alineo/pom.xml"
				goal="cargo:deploy"
				time="2300" />
		</schedule>

		<log logdir="${log.dir}" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail-buildadmin />
			<currentbuildstatuspublisher/>
		</publishers>

	</project>
	
	<!-- Hot-deployment of CP Web to JBoss instance on this server (port 8080) -->
	<project name="Alineo-JBoss-HotDeploy-Autocoder">

		<!-- Identifies location of build status/console output -->
		<listeners><currentbuildstatuslistener/></listeners>

		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Will only run if there is ClearCase activity since last regularly scheduled build. -->
		<modificationset>
			<buildstatus logdir="C:/CruiseControl/logs/Alineo" />
		</modificationset>

		<schedule>
			<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Integrate/McKessonAutocoder/autocoder-interface-server/pom.xml"
				goal="cargo:deploy" time="2310" />
		</schedule>

		<log logdir="${log.dir}" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail-buildadmin />
			<currentbuildstatuspublisher/>
		</publishers>

	</project>

	<!-- Test Alineo Cache SQL scripts run by Installer and Updater -->
	<project name="Cache-CompareDBUpdateInstall-Test" buildafterfailed="true" requireModification="false">

		<!-- Identifies location of build status/console output -->
		<listeners>
			<currentbuildstatuslistener/>
		</listeners>
		
		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Bootstrappers are run every time the build runs, *before* the modification checks -->
		<bootstrappers>
			<clearcasebootstrapper file="pom.xml" viewPath="${jaguar.dir}/Alineo"/>
		</bootstrappers>

		<!-- Defines where cruise looks for changes, to decide whether to run the build. -->
		<modificationset quietperiod="180">
			<buildstatus logdir="C:/CruiseControl/logs/Alineo" />
			<clearcase branch="${ccase.branch}" viewpath="${jaguar.dir}" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which build file/target -->
		<schedule>
			<composite time="${cacheCompareDBUpdateInstallTestTime}">
	
				<!-- ClearCase update -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml"
					goal="com.med:clearcase-update-plugin:update" flags="-N" />

				<!-- generate updater and installer reports and report error if they are different -->								
				<ant target="CompareDBUpdateInstall"
					anthome="${anthome.location}"
					antworkingdir="${antworkingdir.location}"
					usedebug="false"
					uselogger="true">
					<property name="mavenhomedir" value="C:/apache-maven-2.1.0"/>
					<property name="dbms" value="cache"/>
					<property name="database" value="${cache.testsql.database}"/>
					<property name="cache.dbms" value="true"/>
				</ant>
				
			</composite>
		</schedule>

		<log logdir="${log.dir}" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail-installerbuildadmin />
			<currentbuildstatuspublisher/>
		</publishers>

	</project>

	<!-- Test Alineo Oracle SQL scripts run by Installer and Updater -->
	<project name="Oracle-CompareDBUpdateInstall-Test" buildafterfailed="true" requireModification="false">

		<!-- Identifies location of build status/console output -->
		<listeners>
			<currentbuildstatuslistener/>
		</listeners>
		
		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Bootstrappers are run every time the build runs, *before* the modification checks -->
		<bootstrappers>
			<clearcasebootstrapper file="pom.xml" viewPath="${jaguar.dir}/Alineo"/>
		</bootstrappers>

		<!-- Will only run if there is ClearCase activity since last regularly scheduled build. -->
		<!-- and there has been a successful Alineo-Installer build -->
		<modificationset>
			<clearcase branch="${ccase.branch}" viewpath="${jaguar.dir}" />
			<buildstatus logdir="C:/CruiseControl/logs/Alineo-Installer" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which build file/target -->
		<schedule>
			<composite time="${oracleCompareDBUpdateInstallTestTime}">
	
				<!-- ClearCase update -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml"
					goal="com.med:clearcase-update-plugin:update" flags="-N" />
				
				<!-- generate updater and installer reports and report error if they are different -->				
				<ant target="CompareDBUpdateInstall"
					anthome="${anthome.location}"
					antworkingdir="${antworkingdir.location}"
					usedebug="false"
					uselogger="true">
					<property name="mavenhomedir" value="C:/apache-maven-2.1.0"/>
					<property name="dbms" value="oracle"/>
					<property name="database" value="${oracle.testsql.database}"/>
				</ant>
				
			</composite>
		</schedule>

		<log logdir="${log.dir}" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail-installerbuildadmin />
			<currentbuildstatuspublisher/>
		</publishers>

	</project>

	<!-- Test the Alineo installer build (does not test Alineo SQL scripts) -->
	<!-- Runs after each successful Alineo project build -->
	<project name="Alineo-Installer" buildafterfailed="false"> 

		<!-- Identifies location of build status/console output -->
		<listeners><currentbuildstatuslistener/></listeners>

		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Will only run if there is ClearCase activity since last regularly scheduled build. -->
		<!-- and there has been a successful Alineo build -->
		<modificationset>
			<clearcase branch="${ccase.branch}" viewpath="${jaguar.dir}" />
			<buildstatus logdir="C:/CruiseControl/logs/Alineo" />
		</modificationset>

		<schedule>

			<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Installer/pom.xml"
				goal="clean install">
				<property name="database" value="LOCAL:CACHE"/>
			</maven2>

		</schedule>

		<!-- Copy JUnit results to CruiseControl log file. This will make them available to test results tab in CruiseControl. -->
		<log logdir="${log.dir}">
			<merge dir="${jaguar.dir}/Installer/acc-installer/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Installer/alineo-installer/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Installer/alineo-updater/target/surefire-reports"/>
			<merge dir="${jaguar.dir}/Installer/installer-common/target/surefire-reports"/>
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<htmlemail-installerbuildadmin />
			<currentbuildstatuspublisher/>
		</publishers>

	</project>
	
	<!-- Cache Database refresh build -->
	<project name="Alineo-Cache-Database-Refresh" buildafterfailed="false">

		<!-- Identifies location of build status/console output -->
		<listeners>
			<currentbuildstatuslistener/>
		</listeners>
		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Bootstrappers are run every time the build runs, *before* the modification checks -->
		<bootstrappers>
			<clearcasebootstrapper file="pom.xml" viewPath="${jaguar.dir}/Alineo"/>
		</bootstrappers>

		<!-- Defines where cruise looks for changes, to decide whether to run the build. -->
		<modificationset quietperiod="180">
			<buildstatus logdir="C:/CruiseControl/logs/Alineo" />
			<clearcase branch="${ccase.branch}" viewpath="${jaguar.dir}" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which build file/target -->
		<schedule>
			<composite time="${cacheDatabaseRefreshTime}">
	
				<!-- ClearCase update -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml"
					goal="com.med:clearcase-update-plugin:update" flags="-N" />

				<!-- Run uninstall scripts -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Sql/alineo-uninstall-sql-parent/pom.xml" goal="process-resources -Ddatabase=LOCAL:CACHE"/>
	
				<!-- Run install scripts -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Sql/alineo-install-sql-parent/pom.xml" goal="process-resources -Ddatabase=LOCAL:CACHE">
					<property name="onError" value="abort"/>
				</maven2>
	
			</composite>
		</schedule>

		<log logdir="${log.dir}" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<currentbuildstatuspublisher/>
			<htmlemail-typical/>
		</publishers>

	</project>
	
	<!-- Oracle Database refresh build -->
	<project name="Alineo-Oracle-Database-Refresh" buildafterfailed="false">

		<!-- Identifies location of build status/console output -->
		<listeners>
			<currentbuildstatuslistener/>
		</listeners>
		<!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

		<!-- Bootstrappers are run every time the build runs, *before* the modification checks -->
		<bootstrappers>
			<clearcasebootstrapper file="pom.xml" viewPath="${jaguar.dir}/Alineo"/>
		</bootstrappers>

		<!-- Defines where cruise looks for changes, to decide whether to run the build. -->
		<modificationset quietperiod="180">
			<buildstatus logdir="C:/CruiseControl/logs/Alineo" />
			<clearcase branch="${ccase.branch}" viewpath="${jaguar.dir}" />
		</modificationset>

		<!-- Configures the actual build loop, how often and which build file/target -->
		<schedule>
			<composite time="${oracleDatabaseRefreshTime}">

				<!-- ClearCase update -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Alineo/pom.xml"
					goal="com.med:clearcase-update-plugin:update" flags="-N" />

				<!-- Run uninstall scripts -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Sql/alineo-uninstall-sql-parent/pom.xml" goal="process-resources">
					<property name="database" value="CWVDV-JUNIT:DEVCCALINEO-SYSTEM"/>
					<property name="dbms" value="oracle"/>
				</maven2>

				<!-- Run install scripts -->
				<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${jaguar.dir}/Sql/alineo-install-sql-parent/pom.xml" goal="process-resources">
					<property name="onError" value="abort"/>
					<property name="database" value="CWVDV-JUNIT:DEVCCALINEO-SYSTEM"/>
					<property name="dbms" value="oracle"/>
				</maven2>

			</composite>
		</schedule>

		<log logdir="${log.dir}" />

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<currentbuildstatuspublisher/>
			<htmlemail-typical/>
		</publishers>

	</project>


    <!-- Project for Main PCS Compilation Build -->
    <project name="PCS-1.0" buildafterfailed="false">	

        <!-- Identifies location of build status/console output -->
        <listeners>
            <currentbuildstatuslistener/>
        </listeners>

        <!--dateformat format="dd/MM/yyyy HH:mm:ss"/-->

        <!-- Bootstrappers are run every time the build runs,  *before* the modification checks -->
        <bootstrappers>
            <clearcasebootstrapper file="pom.xml" viewPath="${pcs.dir}"/>
        </bootstrappers>

        <!--
            Defines where cruise looks for changes, to decide whether to run the build.
            Note: Must include name of VOB (i.e. "Jaguar"), not just view directory
            Waits for 180 seconds ( 3 min ) to see if anything else has been added prior to kicking off the build
        -->
        <modificationset quietperiod="180">
            <clearcase branch="${pcs.branch}" viewpath="${pcs.dir}"/>
        </modificationset>

        <!-- Configures the actual build loop, how often and which build file/target -->
        <schedule>
            <composite>

                <!-- ClearCase update -->
                <maven2 mvnscript="${env.M2_HOME}/bin/mvn.bat"
                        pomfile="${pcs.dir}/pom.xml"
                        goal="com.med:clearcase-update-plugin:update"
                        flags="-N"/>

                <!-- Compile and install will compile and execute all tests - unit and integration -->
                <maven2 mvnscript="${env.M2_HOME}/bin/mvn.bat"
                        pomfile="${pcs.dir}/pom.xml"
                        goal="clean install">
                </maven2>

		<!-- Deploys the artifacts into an internal repository to be consumed by other projects (IExchange ) -->
		<maven2 mvnscript="${env.M2_HOME}\bin\mvn.bat" pomfile="${pcs.dir}/pom.xml" 
				goal="deploy">
			<property name="maven.test.skip" value="true"/>
		</maven2>
			               		
            </composite>
        </schedule>

        <!--
            Copy JUnit results to CruiseControl log file.
            This will make them available to test results tab in CruiseControl.
        -->
        <log logdir="${log.dir}">
            <merge dir="${pcs.dir}/**/TEST*.xml"/>
        </log>

        <!-- Publishers send emails of cruise control passses or failures *after* a build completes -->
        <publishers>
            <currentbuildstatuspublisher/>
	    <iexchange-cc-email/>
        </publishers>

    </project>


</cruisecontrol>
